cc = clang
cflags = -g
builddir = out/obj

rule cc
  command = $cc $cflags $includes -c $in -o $out

rule link
  command = $cc $ldflags -o $out $in $libs

build $builddir/html.o: cc cgi/html.c

build $builddir/create_users_db.o: cc cgi/create_users_db.c
build cgi-bin/create_users_db: link $builddir/html.o $builddir/create_users_db.o
  libs = -lsqlite3

build $builddir/create_user_table.o: cc cgi/create_user_table.c
build cgi-bin/create_user_table: link $builddir/html.o $builddir/create_user_table.o
  libs = -lsqlite3

build $builddir/insert_into_user_table.o: cc cgi/insert_into_user_table.c
build cgi-bin/insert_into_user_table: link $builddir/html.o $builddir/insert_into_user_table.o
  libs = -lsqlite3

build $builddir/select_from_user_table.o: cc cgi/select_from_user_table.c
build cgi-bin/select_from_user_table: link $builddir/html.o $builddir/select_from_user_table.o
  libs = -lsqlite3

build $builddir/update_user_table.o: cc cgi/update_user_table.c
build cgi-bin/update_user_table: link $builddir/html.o $builddir/update_user_table.o
  libs = -lsqlite3

build $builddir/delete_from_user_table.o: cc cgi/delete_from_user_table.c
build cgi-bin/delete_from_user_table: link $builddir/html.o $builddir/delete_from_user_table.o
  libs = -lsqlite3
